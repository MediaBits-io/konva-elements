import React, { forwardRef, useCallback, useRef } from 'react';
import { Group, Rect, Shape } from 'react-konva';
const ProgressBar = forwardRef(({ progress, max, height = 0, width = 0, backgroundColor = 'rgba(120, 120, 120, 0.2)', fill = '#1e429f', animated, ...rest }, ref) => {
    const progressRectRef = useRef(null);
    const drawShape = useCallback(() => {
        if (progressRectRef.current) {
            const frame = animated ? window._frame : progress;
            progressRectRef.current.width(width * (max > 0 ? frame / max : 0));
        }
    }, [animated, progress, max]);
    return (React.createElement(Group, Object.assign({}, rest, { ref: ref, width: width, height: height }),
        React.createElement(Rect, { width: width, height: height, fill: backgroundColor }),
        React.createElement(Rect, { ref: progressRectRef, width: (width * progress) / max, height: height, fill: fill }),
        React.createElement(Shape, { width: 0, height: 0, sceneFunc: drawShape, progress: progress })));
});
export default ProgressBar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZ3Jlc3NCYXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvUHJvZ3Jlc3NCYXIvUHJvZ3Jlc3NCYXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sS0FBSyxFQUFFLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDL0QsT0FBTyxFQUFFLEtBQUssRUFBbUIsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQVNsRSxNQUFNLFdBQVcsR0FBRyxVQUFVLENBSTVCLENBQ0UsRUFDRSxRQUFRLEVBQ1IsR0FBRyxFQUNILE1BQU0sR0FBRyxDQUFDLEVBQ1YsS0FBSyxHQUFHLENBQUMsRUFDVCxlQUFlLEdBQUcsMEJBQTBCLEVBQzVDLElBQUksR0FBRyxTQUFTLEVBQ2hCLFFBQVEsRUFDUixHQUFHLElBQUksRUFDUixFQUNELEdBQUcsRUFDSCxFQUFFO0lBQ0YsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFhLElBQUksQ0FBQyxDQUFDO0lBRWpELE1BQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUU7UUFDakMsSUFBSSxlQUFlLENBQUMsT0FBTyxFQUFFO1lBQzNCLE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUUsTUFBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO1lBQzNELGVBQWUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDcEU7SUFDSCxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFOUIsT0FBTyxDQUNMLG9CQUFDLEtBQUssb0JBQUssSUFBSSxJQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTTtRQUNyRCxvQkFBQyxJQUFJLElBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxlQUFlLEdBQUk7UUFDN0Qsb0JBQUMsSUFBSSxJQUNILEdBQUcsRUFBRSxlQUFlLEVBQ3BCLEtBQUssRUFBRSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsR0FBRyxHQUFHLEVBQy9CLE1BQU0sRUFBRSxNQUFNLEVBQ2QsSUFBSSxFQUFFLElBQUksR0FDVjtRQUNGLG9CQUFDLEtBQUssSUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxHQUFJLENBQ2xFLENBQ1QsQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDO0FBRUYsZUFBZSxXQUFXLENBQUMifQ==